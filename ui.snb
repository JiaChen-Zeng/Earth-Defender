def initBackground()
	i -> 0
	while i < BACKGROUND_SKY_STAR_COUNT
		memory[_backgroundStars + (i * 2)] -> random(SCREEN_WIDTH)
		memory[_backgroundStars + (i * 2) + 1] -> random(BACKGROUND_GROUND_Y)
		i -> i + 1
	i -> 0
	while i < BACKGROUND_GROUND_SAND_COUNT
		memory[_backgroundSandDark + (i * 2)] -> random(BACKGROUND_GROUND_BLOCK_LENGTH)
		memory[_backgroundSandDark + (i * 2) + 1] -> random(BACKGROUND_GROUND_BLOCK_LENGTH)
		memory[_backgroundSandLight + (i * 2)] -> random(BACKGROUND_GROUND_BLOCK_LENGTH)
		memory[_backgroundSandLight + (i * 2) + 1] -> random(BACKGROUND_GROUND_BLOCK_LENGTH)
		i -> i + 1

def updateBackground()
	memory[_skyTime] -> remainder(memory[_skyTime] + 1, BACKGROUND_SKY_SPEED)
	if memory[_skyTime] = 0
		memory[_skyX] -> remainder(memory[_skyX] + 1, SCREEN_WIDTH)

def drawDots(x, y, _dots, count, color)
	i -> 0
	while i < count
		drawPixel(remainder(x + memory[_dots + (i * 2)], SCREEN_WIDTH), y + memory[_dots + (i * 2) + 1], color)
		i -> i + 1

const BACKGROUND_SKY_NORMAL_COLOR -> 062850 # rgb(18, 74, 130)
const BACKGROUND_SKY_BATTLE_COLOR -> 250650 # rgb(65, 18, 130)
const BACKGROUND_SKY_GAME_CLEAR_COLOR -> 718995 # rgb(183, 231, 247)
const BACKGROUND_SKY_STAR_COUNT -> 20
const BACKGROUND_SKY_STAR_COLOR -> 939395
const BACKGROUND_SKY_SPEED -> 60
const BACKGROUND_GROUND_Y -> 20
const BACKGROUND_GROUND_COLOR -> 203126 # rgb(54, 82, 67)
const BACKGROUND_GROUND_SAND_COUNT -> 15
const BACKGROUND_GROUND_SAND_DARK_COLOR -> 132017 # rgb(36, 54, 44)
const BACKGROUND_GROUND_SAND_LIGHT_COLOR -> 274435 # rgb(71, 115, 91)
const BACKGROUND_GROUND_BLOCK_LENGTH -> 20
def drawBackground()
	drawRect(0, 0, SCREEN_WIDTH, BACKGROUND_GROUND_Y, getSkyColor())
	if and(memory[_state] != STATE_GAME_CLEAR, and(memory[_stateToEnter] = STATE_GAME_CLEAR, (TIME_TO_ENTER_STATE / 2) < memory[TIME_TO_ENTER_STATE]) = false)
		drawDots(memory[_skyX], 0, _backgroundStars, BACKGROUND_SKY_STAR_COUNT, BACKGROUND_SKY_STAR_COLOR)

	drawRect(0, BACKGROUND_GROUND_Y, SCREEN_WIDTH, SCREEN_HEIGHT - BACKGROUND_GROUND_Y, BACKGROUND_GROUND_COLOR)
	y -> BACKGROUND_GROUND_Y
	while y < SCREEN_HEIGHT
		x -> 0
		while x < SCREEN_WIDTH
			drawDots(x, y, _backgroundSandDark, 15, BACKGROUND_GROUND_SAND_DARK_COLOR)
			drawDots(x, y, _backgroundSandLight, 15, BACKGROUND_GROUND_SAND_LIGHT_COLOR)
			x -> x + BACKGROUND_GROUND_BLOCK_LENGTH
		y -> y + BACKGROUND_GROUND_BLOCK_LENGTH

def getSkyColor()
	out -> 0
	if memory[_stateToEnter] = STATE_NULL
		out -> BACKGROUND_SKY_NORMAL_COLOR
		if memory[_state] = STATE_BATTLE
			out -> BACKGROUND_SKY_BATTLE_COLOR
		if memory[_state] = STATE_GAME_CLEAR
			out -> BACKGROUND_SKY_GAME_CLEAR_COLOR
	if memory[_stateToEnter] = STATE_READY
		if memory[_state] = STATE_INITIAL
			out -> BACKGROUND_SKY_NORMAL_COLOR
		if memory[_state] = STATE_BATTLE
			out -> getTransitionedColor(BACKGROUND_SKY_BATTLE_COLOR, BACKGROUND_SKY_NORMAL_COLOR, memory[_timeToEnterState], TIME_TO_ENTER_STATE - 1)
		if memory[_state] = STATE_GAME_CLEAR
			out -> getTransitionedColor(BACKGROUND_SKY_GAME_CLEAR_COLOR, BACKGROUND_SKY_NORMAL_COLOR, memory[_timeToEnterState], TIME_TO_ENTER_STATE - 1)
	if memory[_stateToEnter] = STATE_BATTLE
		out -> getTransitionedColor(BACKGROUND_SKY_NORMAL_COLOR, BACKGROUND_SKY_BATTLE_COLOR, memory[_timeToEnterState], TIME_TO_ENTER_STATE - 1)
	if memory[_stateToEnter] = STATE_GAME_OVER
		out -> getTransitionedColor(BACKGROUND_SKY_BATTLE_COLOR, BACKGROUND_SKY_NORMAL_COLOR, memory[_timeToEnterState], TIME_TO_ENTER_STATE - 1)
	if memory[_stateToEnter] = STATE_GAME_CLEAR
		out -> getTransitionedColor(BACKGROUND_SKY_BATTLE_COLOR, BACKGROUND_SKY_GAME_CLEAR_COLOR, memory[_timeToEnterState], TIME_TO_ENTER_STATE - 1)

const GOLD_BAR_X -> SCREEN_WIDTH - 8
const GOLD_BAR_Y -> 35
const GOLD_BAR_WIDTH -> 8
const GOLD_BAR_HEIGHT -> 38
const GOLD_BAR_COLOR -> 706725 # rgb(181, 173, 65)
def drawGoldBar()
	drawRectOutline(GOLD_BAR_X, GOLD_BAR_Y, GOLD_BAR_WIDTH, GOLD_BAR_HEIGHT, GOLD_BAR_COLOR)
	i -> 0
	while i < GOLD_INDICATOR_COUNT
		drawGoldIndicator(i)
		i -> i + 1

const GOLD_INDICATOR_COUNT -> 5
const GOLD_INDICATOR_WIDTH -> GOLD_BAR_WIDTH - 2
const GOLD_INDICATOR_HEIGHT -> 6
const GOLD_INDICATOR_X -> GOLD_BAR_X + 1
const GOLD_INDICATOR_Y -> GOLD_BAR_Y + GOLD_BAR_HEIGHT - GOLD_INDICATOR_HEIGHT - 2
const GOLD_INDICATOR_SPACE -> 1
def drawGoldIndicator(index) # index increase from bottom to top
	level -> (memory[_gold] / GOLD_INDICATOR_COUNT) - 1 + (mod(memory[_gold], GOLD_INDICATOR_COUNT) > index)
	if -1 < level
		drawRect(GOLD_INDICATOR_X, GOLD_INDICATOR_Y - ((GOLD_INDICATOR_SPACE + GOLD_INDICATOR_HEIGHT) * index), GOLD_INDICATOR_WIDTH, GOLD_INDICATOR_HEIGHT, memory[_colors + level])

const ULTIMATE_ICON_WIDTH -> 6
const ULTIMATE_ICON_HEIGHT -> 6
const ULTIMATE_ICON_X -> GOLD_BAR_X
const ULTIMATE_ICON_Y -> SCREEN_HEIGHT - ULTIMATE_ICON_HEIGHT - 4
const ULTIMATE_COLOR_BEAM_MAIN -> 728792
const ULTIMATE_COLOR_BEAM_BORDER -> 637392
const ULTIMATE_COLOR_BEAM_CONTRAIL -> 828591
const ULTIMATE_COLOR_UNAVAILABLE -> TOWER_COLOR_EMPTY
def drawUltimateIcon()
	drawLine(ULTIMATE_ICON_X, ULTIMATE_ICON_Y, ULTIMATE_ICON_X + ULTIMATE_ICON_WIDTH, ULTIMATE_ICON_Y, cond(memory[_ultimateAvailable], ULTIMATE_COLOR_BEAM_BORDER, ULTIMATE_COLOR_UNAVAILABLE))
	drawLine(ULTIMATE_ICON_X, ULTIMATE_ICON_Y + 1, ULTIMATE_ICON_X + ULTIMATE_ICON_WIDTH, ULTIMATE_ICON_Y + 1, cond(memory[_ultimateAvailable], ULTIMATE_COLOR_BEAM_MAIN, ULTIMATE_COLOR_UNAVAILABLE))
	drawLine(ULTIMATE_ICON_X, ULTIMATE_ICON_Y + 2, ULTIMATE_ICON_X + ULTIMATE_ICON_WIDTH, ULTIMATE_ICON_Y + 2, cond(memory[_ultimateAvailable], ULTIMATE_COLOR_BEAM_BORDER, ULTIMATE_COLOR_UNAVAILABLE))

	drawLine(ULTIMATE_ICON_X + (ULTIMATE_ICON_WIDTH / 2), ULTIMATE_ICON_Y + 3, ULTIMATE_ICON_X + (ULTIMATE_ICON_WIDTH / 2), ULTIMATE_ICON_Y + ULTIMATE_ICON_HEIGHT, cond(memory[_ultimateAvailable], ULTIMATE_COLOR_BEAM_CONTRAIL, ULTIMATE_COLOR_UNAVAILABLE))
	drawLine(ULTIMATE_ICON_X + 1, ULTIMATE_ICON_Y + 3, ULTIMATE_ICON_X + 1, ULTIMATE_ICON_Y + ULTIMATE_ICON_HEIGHT, cond(memory[_ultimateAvailable], ULTIMATE_COLOR_BEAM_CONTRAIL, ULTIMATE_COLOR_UNAVAILABLE))
	drawLine(ULTIMATE_ICON_X + ULTIMATE_ICON_WIDTH - 1, ULTIMATE_ICON_Y + 3, ULTIMATE_ICON_X + ULTIMATE_ICON_WIDTH - 1, ULTIMATE_ICON_Y + ULTIMATE_ICON_HEIGHT, cond(memory[_ultimateAvailable], ULTIMATE_COLOR_BEAM_CONTRAIL, ULTIMATE_COLOR_UNAVAILABLE))

const TOWER_SELECTOR_X_ULTIMATE -> SCREEN_WIDTH - 5
const TOWER_SELECTOR_Y -> SCREEN_HEIGHT - 20
const TOWER_SELECTOR_RADIUS -> 3
const TOWER_SELECTOR_COLOR -> 959595
def drawTowerSelector()
	x -> TOWER_SELECTOR_X_ULTIMATE
	if memory[_selectedTowerIndex] != ULTIMATE_INDEX
		x -> getLaneMiddleX(memory[_selectedTowerIndex])
	drawPixel(x, TOWER_SELECTOR_Y, TOWER_SELECTOR_COLOR)
	drawPixel(x, TOWER_SELECTOR_Y + 1, TOWER_SELECTOR_COLOR)
	drawPixel(x, TOWER_SELECTOR_Y + 2, TOWER_SELECTOR_COLOR)
	drawPixel(x, TOWER_SELECTOR_Y + 3, TOWER_SELECTOR_COLOR)
	drawPixel(x, TOWER_SELECTOR_Y + 4, TOWER_SELECTOR_COLOR)
	drawPixel(x - 1, TOWER_SELECTOR_Y + 3, TOWER_SELECTOR_COLOR)
	drawPixel(x + 1, TOWER_SELECTOR_Y + 3, TOWER_SELECTOR_COLOR)
	drawPixel(x - 2, TOWER_SELECTOR_Y + 2, TOWER_SELECTOR_COLOR)
	drawPixel(x + 2, TOWER_SELECTOR_Y + 2, TOWER_SELECTOR_COLOR)

const SPACE_HINT_X -> 14
const SPACE_HINT_Y -> SCREEN_HEIGHT / 2 + 16
const SPACE_HINT_COLOR_NORMAL -> 777777
const SPACE_HINT_COLOR_LIGHT -> 979764
const SPACE_HINT_COLOR_RATE -> 10
memory[_spaceHintColor] -> SPACE_HINT_COLOR_NORMAL
def writeSpaceHint()
	penAt(SPACE_HINT_X, SPACE_HINT_Y)
	penFont(PEN_FONT_SMALL)
	memory[_spaceHintTime] -> remainder(memory[_spaceHintTime] + 1, SPACE_HINT_COLOR_RATE)
	if memory[_spaceHintTime] = 0
		memory[_spaceHintColor] -> cond(memory[_spaceHintColor] = SPACE_HINT_COLOR_NORMAL, SPACE_HINT_COLOR_LIGHT, SPACE_HINT_COLOR_NORMAL)
	penColor(memory[_spaceHintColor])
	writeP()
	writeR()
	writeE()
	writeS()
	writeS()
	writeSpace()
	writeS()
	writeP()
	writeA()
	writeC()
	writeE()
	writeSpace()
	writeT()
	writeO()
	writeSpace()
	writeS()
	writeT()
	writeA()
	writeR()
	writeT()

const TITLE_COLOR -> 999999
const TITLE_OUTLINE_COLOR -> 000000

const GAME_TITLE_X -> 13
const GAME_TITLE_Y -> SCREEN_HEIGHT / 2 - 20
const GAME_TITLE_SECOND_X -> GAME_TITLE_X + 11
const GAME_TITLE_SECOND_Y -> GAME_TITLE_Y + 11
def writeGameTitle()
	penColor(TITLE_COLOR)
	penOutlineColor(TITLE_OUTLINE_COLOR)
	penFont(PEN_FONT_BIG)

	penAt(GAME_TITLE_X, GAME_TITLE_Y)
	writeE()
	writeA()
	writeR()
	writeT()
	writeH()

	penAt(GAME_TITLE_SECOND_X, GAME_TITLE_SECOND_Y)
	writeD()
	writeE()
	writeF()
	writeE()
	writeN()
	writeD()
	writeE()
	writeR()

const GAME_OVER_X -> 17
const GAME_OVER_Y -> SCREEN_HEIGHT / 2 - 10
def writeGameOver()
	penAt(GAME_OVER_X, GAME_OVER_Y)
	penColor(TITLE_COLOR)
	penOutlineColor(TITLE_OUTLINE_COLOR)
	penFont(PEN_FONT_BIG)
	writeG()
	writeA()
	writeM()
	writeE()
	writeSpace()
	writeO()
	writeV()
	writeE()
	writeR()

const GAME_CLEAR_X -> 13
const GAME_CLEAR_Y -> SCREEN_HEIGHT / 2 - 10
const GAME_CLEAR_COLOR -> 000000
def writeGameClear()
	penAt(GAME_CLEAR_X, GAME_CLEAR_Y)
	penColor(TITLE_COLOR)
	penOutlineColor(TITLE_OUTLINE_COLOR)
	penFont(PEN_FONT_BIG)
	writeG()
	writeA()
	writeM()
	writeE()
	writeSpace()
	writeC()
	writeL()
	writeE()
	writeA()
	writeR()

const WAVE_NOTICE_X -> 10
const WAVE_NOTICE_Y -> SCREEN_HEIGHT / 2 - 10
const WAVE_NOTICE_SECOND_X -> WAVE_NOTICE_X
const WAVE_NOTICE_SECOND_Y -> WAVE_NOTICE_Y + 10
const WAVE_NOTICE_NUMBER_COLOR -> 883647
def writeWaveNotice()
	penOutlineColor(TITLE_OUTLINE_COLOR)
	penFont(PEN_FONT_BIG)

	penAt(WAVE_NOTICE_X, WAVE_NOTICE_Y)
	penColor(WAVE_NOTICE_NUMBER_COLOR)
	if (memory[_waveNumber]) = ENEMY_WAVE_MAX
		writeF()
		writeI()
		writeN()
		writeA()
		writeL()
	if (memory[_waveNumber]) != ENEMY_WAVE_MAX
		writeNumber(memory[_waveNumber])
		writeSpace()
		penColor(TITLE_COLOR)
		writeO()
		writeF()
		writeSpace()
		penColor(WAVE_NOTICE_NUMBER_COLOR)
		writeNumber(ENEMY_WAVE_MAX)
	writeSpace()
	penColor(TITLE_COLOR)
	writeW()
	writeA()
	writeV()
	writeE()

	penAt(WAVE_NOTICE_SECOND_X, WAVE_NOTICE_SECOND_Y)
	writeD()
	writeE()
	writeT()
	writeE()
	writeC()
	writeT()
	writeE()
	writeD()

def yAcrossGoldIndicator(y)
	out -> and(GOLD_BAR_Y <= y, y <= (GOLD_BAR_Y + GOLD_BAR_HEIGHT))