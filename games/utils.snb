const ERROR_ENEMY_COUNT_EXCEEDED -> 200000

const LANE_COUNT -> 7
const LANE_MARGIN -> 1
const LANE_WIDTH -> 12
def getLaneX(index)
	out -> LANE_MARGIN + ((LANE_WIDTH + LANE_MARGIN) * index)

def getLaneMiddleX(index)
	out -> getLaneX(index) + (LANE_WIDTH / 2)

const SPOT_TOP -> 8
const SPOT_SPACE -> 10
const SPOT_RANGE -> 4
def getSpot(index)
	out -> SPOT_TOP + (index * SPOT_SPACE)

def getLength(x, y)
	out -> sqrt((x * x) + (y * y))

def isPointInCircle(x, y, circleX, circleY, radius)
	offsetX -> circleX - x
	offsetY -> circleY - y
	out -> ((offsetX * offsetX) + (offsetY * offsetY)) <= (radius * radius)

const SPACE_HINT_X -> 12
const SPACE_HINT_Y -> SCREEN_HEIGHT / 2 + 16
const SPACE_HINT_COLOR_NORMAL -> 777777
const SPACE_HINT_COLOR_LIGHT -> 979764
const SPACE_HINT_COLOR_RATE -> 10
memory[_spaceHintColor] -> SPACE_HINT_COLOR_NORMAL
def writeSpaceHint()
	penAt(SPACE_HINT_X, SPACE_HINT_Y)
	memory[_spaceHintTime] -> remainder(memory[_spaceHintTime] + 1, SPACE_HINT_COLOR_RATE)
	if memory[_spaceHintTime] = 0
		memory[_spaceHintColor] -> cond(memory[_spaceHintColor] = SPACE_HINT_COLOR_NORMAL, SPACE_HINT_COLOR_LIGHT, SPACE_HINT_COLOR_NORMAL)
	penColor(memory[_spaceHintColor])
	writeP()
	writeR()
	writeE()
	writeS()
	writeS()
	writeSpace()
	writeS()
	writeP()
	writeA()
	writeC()
	writeE()
	writeSpace()
	writeT()
	writeO()
	writeSpace()
	writeS()
	writeT()
	writeA()
	writeR()
	writeT()

const GAME_OVER_X -> 30
const GAME_OVER_Y -> SCREEN_HEIGHT / 2 - 6
const GAME_OVER_COLOR -> 000000
def writeGameOver()
	penAt(GAME_OVER_X, GAME_OVER_Y)
	penColor(GAME_OVER_COLOR)
	writeG()
	writeA()
	writeM()
	writeE()
	writeSpace()
	writeO()
	writeV()
	writeE()
	writeR()

const GAME_CLEAR_X -> 28
const GAME_CLEAR_Y -> SCREEN_HEIGHT / 2 - 6
const GAME_CLEAR_COLOR -> 000000
def writeGameClear()
	penAt(GAME_CLEAR_X, GAME_CLEAR_Y)
	penColor(GAME_CLEAR_COLOR)
	writeG()
	writeA()
	writeM()
	writeE()
	writeSpace()
	writeC()
	writeL()
	writeE()
	writeA()
	writeR()